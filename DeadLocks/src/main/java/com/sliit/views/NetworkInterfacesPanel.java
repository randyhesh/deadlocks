/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sliit.views;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;

/**
 *
 * @author Heshani
 */
public class NetworkInterfacesPanel extends javax.swing.JPanel {

    private NetworkInterface[] networkInterfacesList;

    /**
     * Creates new form networkInterfacesList
     */
    public NetworkInterfacesPanel() {
        initComponents();
        getNetworkInterfaces();
    }

    private void getNetworkInterfaces() {

        NetworkInterface[] devices = JpcapCaptor.getDeviceList();
        this.networkInterfacesList = devices;

        for (int i = 0; i < devices.length; i++) {

            //System.out.println(devices[i].name);

            DevicePanel devicePanel = new DevicePanel();

            //JLabel nameLabel = new JLabel("nameLabel");
            //nameLabel.setText(devices[i].name);
            JLabel descLabel = new JLabel("descLabel");
            descLabel.setText(devices[i].description);

            JLabel datalinkLabel = new JLabel("datalinkLabel");
            datalinkLabel.setText(devices[i].datalink_name);

            JLabel datalinkDescLabel = new JLabel("datalinkDescLabel");
            datalinkDescLabel.setText(devices[i].datalink_description);

            JButton processButton = new JButton(devices[i].name);

            DeviceListener deviceListener = new DeviceListener();
            processButton.addActionListener(deviceListener);

            devicePanel.add(processButton);
            //devicePanel.add(nameLabel);
            devicePanel.add(descLabel);
            devicePanel.add(datalinkLabel);
            devicePanel.add(datalinkDescLabel);

            this.add(devicePanel);

        }
    }

    class DeviceListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {

            Home.containerPanel.removeAll();
            Home.containerPanel.add(new TrafficAnalyserPanel(networkInterfacesList, e.getActionCommand()), "trafficAnalyserPanel", 0);
            Home.containerPanel.revalidate();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(905, 509));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
